## 代理三要素
公共接口、真实对象、代理对象
----------------------------------------------------
## 静态代理
通常用于对原有业务逻辑的扩充，通过对真实对象的封装，来实现扩展性，代理类在程序运行前就完成编译，生成了.class文件
优点：扩展原功能，不侵入原代码
缺点：需要针对每个具体类，每个接口分别编写代理类

为了解决静态代理的缺点，就得通过动态代理来实现了
----------------------------------------------------
## 动态代理
代理类在程序运行时创建的代理方式被成为动态代理，相比于静态代理， 动态代理可以很方便的对代理类的函数进行统一的处理，而不用修改每个代理类中的方法。
在java.lang.reflect包下提供了一个Proxy类和一个InvocationHandler接口，通过这个类和这个接口可以生成JDK动态代理类和动态代理对象。
利用Proxy类的newProxyInstance方法创建动态代理对象